name: CI Pipeline

on: push

jobs: 
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Pipeline
        env:
          DAGSHUB_PAT: ${{secrets.DAGSHUB_PAT}}
        run: |
          dvc repro

      - name: Run Test
        env:  
          DAGSHUB_PAT: ${{secrets.DAGSHUB_PAT}}
        run: |
          python -m unittest tests/test_model.py
      
      - name: Promote model
        if: success()
        env:  
          DAGSHUB_PAT: ${{secrets.DAGSHUB_PAT}}
        run: |
          python -m unittest scripts/promote_model.py
      
      - name: Run Flask app tests
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_flask_app.py

      - name: Login to Docker
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERS_HUB_USERNAME}}
          password: ${{secrets.DOCKERS_HUB_ACCESS_TOKEN}} 

      - name: Build Docker Image
        if: success()
        run: |
          docker build -t ${{secrets.DOCKER_HUB_USERNAME}}/emotions:latest

      - name: Push the Image
        if: success()
        run: | 
          docker push ${{secrets.DOCKER_HUB_USERNAME}}/emotions:latest
